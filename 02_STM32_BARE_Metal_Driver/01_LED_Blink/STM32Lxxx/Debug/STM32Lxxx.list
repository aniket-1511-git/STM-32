
STM32Lxxx.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000018c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000004f8  0800018c  0800018c  0000118c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000684  0800068c  0000168c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000684  08000684  0000168c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000684  08000684  0000168c  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000684  0800068c  0000168c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000684  08000684  00001684  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000688  08000688  00001688  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  0000168c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .sram2        00000000  10000000  10000000  0000168c  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  0000168c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000944  00000000  00000000  000016b6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000030f  00000000  00000000  00001ffa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c0  00000000  00000000  00002310  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000084  00000000  00000000  000023d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001801  00000000  00000000  00002454  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000d1d  00000000  00000000  00003c55  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00005806  00000000  00000000  00004972  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0000a178  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000248  00000000  00000000  0000a1bc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000048  00000000  00000000  0000a404  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800018c <__do_global_dtors_aux>:
 800018c:	b510      	push	{r4, lr}
 800018e:	4c05      	ldr	r4, [pc, #20]	@ (80001a4 <__do_global_dtors_aux+0x18>)
 8000190:	7823      	ldrb	r3, [r4, #0]
 8000192:	b933      	cbnz	r3, 80001a2 <__do_global_dtors_aux+0x16>
 8000194:	4b04      	ldr	r3, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x1c>)
 8000196:	b113      	cbz	r3, 800019e <__do_global_dtors_aux+0x12>
 8000198:	4804      	ldr	r0, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x20>)
 800019a:	f3af 8000 	nop.w
 800019e:	2301      	movs	r3, #1
 80001a0:	7023      	strb	r3, [r4, #0]
 80001a2:	bd10      	pop	{r4, pc}
 80001a4:	20000000 	.word	0x20000000
 80001a8:	00000000 	.word	0x00000000
 80001ac:	0800066c 	.word	0x0800066c

080001b0 <frame_dummy>:
 80001b0:	b508      	push	{r3, lr}
 80001b2:	4b03      	ldr	r3, [pc, #12]	@ (80001c0 <frame_dummy+0x10>)
 80001b4:	b11b      	cbz	r3, 80001be <frame_dummy+0xe>
 80001b6:	4903      	ldr	r1, [pc, #12]	@ (80001c4 <frame_dummy+0x14>)
 80001b8:	4803      	ldr	r0, [pc, #12]	@ (80001c8 <frame_dummy+0x18>)
 80001ba:	f3af 8000 	nop.w
 80001be:	bd08      	pop	{r3, pc}
 80001c0:	00000000 	.word	0x00000000
 80001c4:	20000004 	.word	0x20000004
 80001c8:	0800066c 	.word	0x0800066c

080001cc <GPIO_PeriClockControl>:
* Description        :
*

*********************************************************************************************************************/
void GPIO_PeriClockControl(GPIO_RegDef_t *GPIOx_p, uint8_t state_u8)
{
 80001cc:	b480      	push	{r7}
 80001ce:	b083      	sub	sp, #12
 80001d0:	af00      	add	r7, sp, #0
 80001d2:	6078      	str	r0, [r7, #4]
 80001d4:	460b      	mov	r3, r1
 80001d6:	70fb      	strb	r3, [r7, #3]
	if(ENABLE == state_u8)
 80001d8:	78fb      	ldrb	r3, [r7, #3]
 80001da:	2b01      	cmp	r3, #1
 80001dc:	d157      	bne.n	800028e <GPIO_PeriClockControl+0xc2>
	{
		if(GPIOA == GPIOx_p)
 80001de:	687b      	ldr	r3, [r7, #4]
 80001e0:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 80001e4:	d106      	bne.n	80001f4 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80001e6:	4b59      	ldr	r3, [pc, #356]	@ (800034c <GPIO_PeriClockControl+0x180>)
 80001e8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80001ea:	4a58      	ldr	r2, [pc, #352]	@ (800034c <GPIO_PeriClockControl+0x180>)
 80001ec:	f043 0301 	orr.w	r3, r3, #1
 80001f0:	64d3      	str	r3, [r2, #76]	@ 0x4c
	}
	else
	{

	}
}
 80001f2:	e0a6      	b.n	8000342 <GPIO_PeriClockControl+0x176>
		else if(GPIOB == GPIOx_p)
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	4a56      	ldr	r2, [pc, #344]	@ (8000350 <GPIO_PeriClockControl+0x184>)
 80001f8:	4293      	cmp	r3, r2
 80001fa:	d106      	bne.n	800020a <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80001fc:	4b53      	ldr	r3, [pc, #332]	@ (800034c <GPIO_PeriClockControl+0x180>)
 80001fe:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000200:	4a52      	ldr	r2, [pc, #328]	@ (800034c <GPIO_PeriClockControl+0x180>)
 8000202:	f043 0302 	orr.w	r3, r3, #2
 8000206:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000208:	e09b      	b.n	8000342 <GPIO_PeriClockControl+0x176>
		else if(GPIOC == GPIOx_p)
 800020a:	687b      	ldr	r3, [r7, #4]
 800020c:	4a51      	ldr	r2, [pc, #324]	@ (8000354 <GPIO_PeriClockControl+0x188>)
 800020e:	4293      	cmp	r3, r2
 8000210:	d106      	bne.n	8000220 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000212:	4b4e      	ldr	r3, [pc, #312]	@ (800034c <GPIO_PeriClockControl+0x180>)
 8000214:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000216:	4a4d      	ldr	r2, [pc, #308]	@ (800034c <GPIO_PeriClockControl+0x180>)
 8000218:	f043 0304 	orr.w	r3, r3, #4
 800021c:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800021e:	e090      	b.n	8000342 <GPIO_PeriClockControl+0x176>
		else if(GPIOD == GPIOx_p)
 8000220:	687b      	ldr	r3, [r7, #4]
 8000222:	4a4d      	ldr	r2, [pc, #308]	@ (8000358 <GPIO_PeriClockControl+0x18c>)
 8000224:	4293      	cmp	r3, r2
 8000226:	d106      	bne.n	8000236 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000228:	4b48      	ldr	r3, [pc, #288]	@ (800034c <GPIO_PeriClockControl+0x180>)
 800022a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800022c:	4a47      	ldr	r2, [pc, #284]	@ (800034c <GPIO_PeriClockControl+0x180>)
 800022e:	f043 0308 	orr.w	r3, r3, #8
 8000232:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000234:	e085      	b.n	8000342 <GPIO_PeriClockControl+0x176>
		else if(GPIOE  == GPIOx_p)
 8000236:	687b      	ldr	r3, [r7, #4]
 8000238:	4a48      	ldr	r2, [pc, #288]	@ (800035c <GPIO_PeriClockControl+0x190>)
 800023a:	4293      	cmp	r3, r2
 800023c:	d106      	bne.n	800024c <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800023e:	4b43      	ldr	r3, [pc, #268]	@ (800034c <GPIO_PeriClockControl+0x180>)
 8000240:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000242:	4a42      	ldr	r2, [pc, #264]	@ (800034c <GPIO_PeriClockControl+0x180>)
 8000244:	f043 0310 	orr.w	r3, r3, #16
 8000248:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800024a:	e07a      	b.n	8000342 <GPIO_PeriClockControl+0x176>
		else if(GPIOF == GPIOx_p)
 800024c:	687b      	ldr	r3, [r7, #4]
 800024e:	4a44      	ldr	r2, [pc, #272]	@ (8000360 <GPIO_PeriClockControl+0x194>)
 8000250:	4293      	cmp	r3, r2
 8000252:	d106      	bne.n	8000262 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000254:	4b3d      	ldr	r3, [pc, #244]	@ (800034c <GPIO_PeriClockControl+0x180>)
 8000256:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000258:	4a3c      	ldr	r2, [pc, #240]	@ (800034c <GPIO_PeriClockControl+0x180>)
 800025a:	f043 0320 	orr.w	r3, r3, #32
 800025e:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000260:	e06f      	b.n	8000342 <GPIO_PeriClockControl+0x176>
		else if(GPIOG == GPIOx_p)
 8000262:	687b      	ldr	r3, [r7, #4]
 8000264:	4a3f      	ldr	r2, [pc, #252]	@ (8000364 <GPIO_PeriClockControl+0x198>)
 8000266:	4293      	cmp	r3, r2
 8000268:	d106      	bne.n	8000278 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800026a:	4b38      	ldr	r3, [pc, #224]	@ (800034c <GPIO_PeriClockControl+0x180>)
 800026c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800026e:	4a37      	ldr	r2, [pc, #220]	@ (800034c <GPIO_PeriClockControl+0x180>)
 8000270:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000274:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000276:	e064      	b.n	8000342 <GPIO_PeriClockControl+0x176>
		else if(GPIOH == GPIOx_p)
 8000278:	687b      	ldr	r3, [r7, #4]
 800027a:	4a3b      	ldr	r2, [pc, #236]	@ (8000368 <GPIO_PeriClockControl+0x19c>)
 800027c:	4293      	cmp	r3, r2
 800027e:	d160      	bne.n	8000342 <GPIO_PeriClockControl+0x176>
			GPIOH_PCLK_EN();
 8000280:	4b32      	ldr	r3, [pc, #200]	@ (800034c <GPIO_PeriClockControl+0x180>)
 8000282:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000284:	4a31      	ldr	r2, [pc, #196]	@ (800034c <GPIO_PeriClockControl+0x180>)
 8000286:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800028a:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800028c:	e059      	b.n	8000342 <GPIO_PeriClockControl+0x176>
	else if(DISABLE == state_u8)
 800028e:	78fb      	ldrb	r3, [r7, #3]
 8000290:	2b00      	cmp	r3, #0
 8000292:	d156      	bne.n	8000342 <GPIO_PeriClockControl+0x176>
		if(GPIOA == GPIOx_p)
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 800029a:	d106      	bne.n	80002aa <GPIO_PeriClockControl+0xde>
			GPIOA_PCLK_DI();
 800029c:	4b2b      	ldr	r3, [pc, #172]	@ (800034c <GPIO_PeriClockControl+0x180>)
 800029e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80002a0:	4a2a      	ldr	r2, [pc, #168]	@ (800034c <GPIO_PeriClockControl+0x180>)
 80002a2:	f023 0301 	bic.w	r3, r3, #1
 80002a6:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80002a8:	e04b      	b.n	8000342 <GPIO_PeriClockControl+0x176>
		else if(GPIOB == GPIOx_p)
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	4a28      	ldr	r2, [pc, #160]	@ (8000350 <GPIO_PeriClockControl+0x184>)
 80002ae:	4293      	cmp	r3, r2
 80002b0:	d106      	bne.n	80002c0 <GPIO_PeriClockControl+0xf4>
			GPIOB_PCLK_DI();
 80002b2:	4b26      	ldr	r3, [pc, #152]	@ (800034c <GPIO_PeriClockControl+0x180>)
 80002b4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80002b6:	4a25      	ldr	r2, [pc, #148]	@ (800034c <GPIO_PeriClockControl+0x180>)
 80002b8:	f023 0302 	bic.w	r3, r3, #2
 80002bc:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80002be:	e040      	b.n	8000342 <GPIO_PeriClockControl+0x176>
		else if(GPIOC == GPIOx_p)
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	4a24      	ldr	r2, [pc, #144]	@ (8000354 <GPIO_PeriClockControl+0x188>)
 80002c4:	4293      	cmp	r3, r2
 80002c6:	d106      	bne.n	80002d6 <GPIO_PeriClockControl+0x10a>
			GPIOC_PCLK_DI();
 80002c8:	4b20      	ldr	r3, [pc, #128]	@ (800034c <GPIO_PeriClockControl+0x180>)
 80002ca:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80002cc:	4a1f      	ldr	r2, [pc, #124]	@ (800034c <GPIO_PeriClockControl+0x180>)
 80002ce:	f023 0304 	bic.w	r3, r3, #4
 80002d2:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80002d4:	e035      	b.n	8000342 <GPIO_PeriClockControl+0x176>
		else if(GPIOD == GPIOx_p)
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	4a1f      	ldr	r2, [pc, #124]	@ (8000358 <GPIO_PeriClockControl+0x18c>)
 80002da:	4293      	cmp	r3, r2
 80002dc:	d106      	bne.n	80002ec <GPIO_PeriClockControl+0x120>
			GPIOD_PCLK_DI();
 80002de:	4b1b      	ldr	r3, [pc, #108]	@ (800034c <GPIO_PeriClockControl+0x180>)
 80002e0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80002e2:	4a1a      	ldr	r2, [pc, #104]	@ (800034c <GPIO_PeriClockControl+0x180>)
 80002e4:	f023 0308 	bic.w	r3, r3, #8
 80002e8:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80002ea:	e02a      	b.n	8000342 <GPIO_PeriClockControl+0x176>
		else if(GPIOE  == GPIOx_p)
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	4a1b      	ldr	r2, [pc, #108]	@ (800035c <GPIO_PeriClockControl+0x190>)
 80002f0:	4293      	cmp	r3, r2
 80002f2:	d106      	bne.n	8000302 <GPIO_PeriClockControl+0x136>
			GPIOE_PCLK_DI();
 80002f4:	4b15      	ldr	r3, [pc, #84]	@ (800034c <GPIO_PeriClockControl+0x180>)
 80002f6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80002f8:	4a14      	ldr	r2, [pc, #80]	@ (800034c <GPIO_PeriClockControl+0x180>)
 80002fa:	f023 0310 	bic.w	r3, r3, #16
 80002fe:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000300:	e01f      	b.n	8000342 <GPIO_PeriClockControl+0x176>
		else if(GPIOF == GPIOx_p)
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	4a16      	ldr	r2, [pc, #88]	@ (8000360 <GPIO_PeriClockControl+0x194>)
 8000306:	4293      	cmp	r3, r2
 8000308:	d106      	bne.n	8000318 <GPIO_PeriClockControl+0x14c>
		GPIOF_PCLK_DI();
 800030a:	4b10      	ldr	r3, [pc, #64]	@ (800034c <GPIO_PeriClockControl+0x180>)
 800030c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800030e:	4a0f      	ldr	r2, [pc, #60]	@ (800034c <GPIO_PeriClockControl+0x180>)
 8000310:	f023 0320 	bic.w	r3, r3, #32
 8000314:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000316:	e014      	b.n	8000342 <GPIO_PeriClockControl+0x176>
		else if(GPIOG == GPIOx_p)
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	4a12      	ldr	r2, [pc, #72]	@ (8000364 <GPIO_PeriClockControl+0x198>)
 800031c:	4293      	cmp	r3, r2
 800031e:	d106      	bne.n	800032e <GPIO_PeriClockControl+0x162>
			GPIOG_PCLK_DI();
 8000320:	4b0a      	ldr	r3, [pc, #40]	@ (800034c <GPIO_PeriClockControl+0x180>)
 8000322:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000324:	4a09      	ldr	r2, [pc, #36]	@ (800034c <GPIO_PeriClockControl+0x180>)
 8000326:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800032a:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800032c:	e009      	b.n	8000342 <GPIO_PeriClockControl+0x176>
		else if(GPIOH == GPIOx_p)
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	4a0d      	ldr	r2, [pc, #52]	@ (8000368 <GPIO_PeriClockControl+0x19c>)
 8000332:	4293      	cmp	r3, r2
 8000334:	d105      	bne.n	8000342 <GPIO_PeriClockControl+0x176>
			GPIOH_PCLK_DI();
 8000336:	4b05      	ldr	r3, [pc, #20]	@ (800034c <GPIO_PeriClockControl+0x180>)
 8000338:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800033a:	4a04      	ldr	r2, [pc, #16]	@ (800034c <GPIO_PeriClockControl+0x180>)
 800033c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000340:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000342:	bf00      	nop
 8000344:	370c      	adds	r7, #12
 8000346:	46bd      	mov	sp, r7
 8000348:	bc80      	pop	{r7}
 800034a:	4770      	bx	lr
 800034c:	40021000 	.word	0x40021000
 8000350:	48000400 	.word	0x48000400
 8000354:	48000800 	.word	0x48000800
 8000358:	48000c00 	.word	0x48000c00
 800035c:	48001000 	.word	0x48001000
 8000360:	48001400 	.word	0x48001400
 8000364:	48001800 	.word	0x48001800
 8000368:	48001c00 	.word	0x48001c00

0800036c <GPIO_Init>:
* Description        :
*

*********************************************************************************************************************/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 800036c:	b480      	push	{r7}
 800036e:	b087      	sub	sp, #28
 8000370:	af00      	add	r7, sp, #0
 8000372:	6078      	str	r0, [r7, #4]
	uint32_t temp =0;
 8000374:	2300      	movs	r3, #0
 8000376:	617b      	str	r3, [r7, #20]
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000378:	687b      	ldr	r3, [r7, #4]
 800037a:	795b      	ldrb	r3, [r3, #5]
 800037c:	2b03      	cmp	r3, #3
 800037e:	d821      	bhi.n	80003c4 <GPIO_Init+0x58>
	{
		temp=( pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	795b      	ldrb	r3, [r3, #5]
 8000384:	461a      	mov	r2, r3
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	791b      	ldrb	r3, [r3, #4]
 800038a:	005b      	lsls	r3, r3, #1
 800038c:	fa02 f303 	lsl.w	r3, r2, r3
 8000390:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0X03 << (2* pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	681b      	ldr	r3, [r3, #0]
 8000396:	681a      	ldr	r2, [r3, #0]
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	791b      	ldrb	r3, [r3, #4]
 800039c:	005b      	lsls	r3, r3, #1
 800039e:	2103      	movs	r1, #3
 80003a0:	fa01 f303 	lsl.w	r3, r1, r3
 80003a4:	43db      	mvns	r3, r3
 80003a6:	4619      	mov	r1, r3
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	681b      	ldr	r3, [r3, #0]
 80003ac:	400a      	ands	r2, r1
 80003ae:	601a      	str	r2, [r3, #0]
		pGPIOHandle ->pGPIOx->MODER |= temp;
 80003b0:	687b      	ldr	r3, [r7, #4]
 80003b2:	681b      	ldr	r3, [r3, #0]
 80003b4:	6819      	ldr	r1, [r3, #0]
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	681b      	ldr	r3, [r3, #0]
 80003ba:	697a      	ldr	r2, [r7, #20]
 80003bc:	430a      	orrs	r2, r1
 80003be:	601a      	str	r2, [r3, #0]
		temp=0;
 80003c0:	2300      	movs	r3, #0
 80003c2:	617b      	str	r3, [r7, #20]
	else
	{
	//for interrupts
	}

	temp=0;
 80003c4:	2300      	movs	r3, #0
 80003c6:	617b      	str	r3, [r7, #20]
	temp=(pGPIOHandle -> GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	799b      	ldrb	r3, [r3, #6]
 80003cc:	461a      	mov	r2, r3
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	791b      	ldrb	r3, [r3, #4]
 80003d2:	005b      	lsls	r3, r3, #1
 80003d4:	fa02 f303 	lsl.w	r3, r2, r3
 80003d8:	617b      	str	r3, [r7, #20]
	pGPIOHandle ->pGPIOx->OSPEEDR &= ~(0X03 << (2* pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	681b      	ldr	r3, [r3, #0]
 80003de:	689a      	ldr	r2, [r3, #8]
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	791b      	ldrb	r3, [r3, #4]
 80003e4:	005b      	lsls	r3, r3, #1
 80003e6:	2103      	movs	r1, #3
 80003e8:	fa01 f303 	lsl.w	r3, r1, r3
 80003ec:	43db      	mvns	r3, r3
 80003ee:	4619      	mov	r1, r3
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	400a      	ands	r2, r1
 80003f6:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	6899      	ldr	r1, [r3, #8]
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	681b      	ldr	r3, [r3, #0]
 8000402:	697a      	ldr	r2, [r7, #20]
 8000404:	430a      	orrs	r2, r1
 8000406:	609a      	str	r2, [r3, #8]
	temp=0;
 8000408:	2300      	movs	r3, #0
 800040a:	617b      	str	r3, [r7, #20]

	temp=(pGPIOHandle -> GPIO_PinConfig.GPIO_PinPuPdControl<< (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	79db      	ldrb	r3, [r3, #7]
 8000410:	461a      	mov	r2, r3
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	791b      	ldrb	r3, [r3, #4]
 8000416:	005b      	lsls	r3, r3, #1
 8000418:	fa02 f303 	lsl.w	r3, r2, r3
 800041c:	617b      	str	r3, [r7, #20]
	pGPIOHandle ->pGPIOx->PUPDR &= ~(0X03 << (2* pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	681b      	ldr	r3, [r3, #0]
 8000422:	68da      	ldr	r2, [r3, #12]
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	791b      	ldrb	r3, [r3, #4]
 8000428:	005b      	lsls	r3, r3, #1
 800042a:	2103      	movs	r1, #3
 800042c:	fa01 f303 	lsl.w	r3, r1, r3
 8000430:	43db      	mvns	r3, r3
 8000432:	4619      	mov	r1, r3
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	681b      	ldr	r3, [r3, #0]
 8000438:	400a      	ands	r2, r1
 800043a:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	681b      	ldr	r3, [r3, #0]
 8000440:	68d9      	ldr	r1, [r3, #12]
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	681b      	ldr	r3, [r3, #0]
 8000446:	697a      	ldr	r2, [r7, #20]
 8000448:	430a      	orrs	r2, r1
 800044a:	60da      	str	r2, [r3, #12]
	temp=0;
 800044c:	2300      	movs	r3, #0
 800044e:	617b      	str	r3, [r7, #20]

	temp=(pGPIOHandle -> GPIO_PinConfig.GPIO_PinOPType<<  pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000450:	687b      	ldr	r3, [r7, #4]
 8000452:	7a1b      	ldrb	r3, [r3, #8]
 8000454:	461a      	mov	r2, r3
 8000456:	687b      	ldr	r3, [r7, #4]
 8000458:	791b      	ldrb	r3, [r3, #4]
 800045a:	fa02 f303 	lsl.w	r3, r2, r3
 800045e:	617b      	str	r3, [r7, #20]
	pGPIOHandle ->pGPIOx->OTYPER &= ~(0X01 << ( pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 8000460:	687b      	ldr	r3, [r7, #4]
 8000462:	681b      	ldr	r3, [r3, #0]
 8000464:	685a      	ldr	r2, [r3, #4]
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	791b      	ldrb	r3, [r3, #4]
 800046a:	4619      	mov	r1, r3
 800046c:	2301      	movs	r3, #1
 800046e:	408b      	lsls	r3, r1
 8000470:	43db      	mvns	r3, r3
 8000472:	4619      	mov	r1, r3
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	681b      	ldr	r3, [r3, #0]
 8000478:	400a      	ands	r2, r1
 800047a:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	681b      	ldr	r3, [r3, #0]
 8000480:	6859      	ldr	r1, [r3, #4]
 8000482:	687b      	ldr	r3, [r7, #4]
 8000484:	681b      	ldr	r3, [r3, #0]
 8000486:	697a      	ldr	r2, [r7, #20]
 8000488:	430a      	orrs	r2, r1
 800048a:	605a      	str	r2, [r3, #4]
	temp=0;
 800048c:	2300      	movs	r3, #0
 800048e:	617b      	str	r3, [r7, #20]

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	795b      	ldrb	r3, [r3, #5]
 8000494:	2b02      	cmp	r3, #2
 8000496:	d132      	bne.n	80004fe <GPIO_Init+0x192>
	{
		uint32_t temp1 ,temp2;
		temp1=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/8;
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	791b      	ldrb	r3, [r3, #4]
 800049c:	08db      	lsrs	r3, r3, #3
 800049e:	b2db      	uxtb	r3, r3
 80004a0:	613b      	str	r3, [r7, #16]
		temp2=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%8;
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	791b      	ldrb	r3, [r3, #4]
 80004a6:	f003 0307 	and.w	r3, r3, #7
 80004aa:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0X0f<< (4*temp2));
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	681b      	ldr	r3, [r3, #0]
 80004b0:	693a      	ldr	r2, [r7, #16]
 80004b2:	3208      	adds	r2, #8
 80004b4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80004b8:	68fb      	ldr	r3, [r7, #12]
 80004ba:	009b      	lsls	r3, r3, #2
 80004bc:	210f      	movs	r1, #15
 80004be:	fa01 f303 	lsl.w	r3, r1, r3
 80004c2:	43db      	mvns	r3, r3
 80004c4:	4619      	mov	r1, r3
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	681b      	ldr	r3, [r3, #0]
 80004ca:	4011      	ands	r1, r2
 80004cc:	693a      	ldr	r2, [r7, #16]
 80004ce:	3208      	adds	r2, #8
 80004d0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*temp2));
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	681b      	ldr	r3, [r3, #0]
 80004d8:	693a      	ldr	r2, [r7, #16]
 80004da:	3208      	adds	r2, #8
 80004dc:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	7a5b      	ldrb	r3, [r3, #9]
 80004e4:	4619      	mov	r1, r3
 80004e6:	68fb      	ldr	r3, [r7, #12]
 80004e8:	009b      	lsls	r3, r3, #2
 80004ea:	fa01 f303 	lsl.w	r3, r1, r3
 80004ee:	4619      	mov	r1, r3
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	681b      	ldr	r3, [r3, #0]
 80004f4:	4311      	orrs	r1, r2
 80004f6:	693a      	ldr	r2, [r7, #16]
 80004f8:	3208      	adds	r2, #8
 80004fa:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 80004fe:	bf00      	nop
 8000500:	371c      	adds	r7, #28
 8000502:	46bd      	mov	sp, r7
 8000504:	bc80      	pop	{r7}
 8000506:	4770      	bx	lr

08000508 <GPIO_TogglePin>:
* Description        :
*

*********************************************************************************************************************/
void GPIO_TogglePin(GPIO_RegDef_t *pGPIOx, uint8_t pinNumber_u8)
{
 8000508:	b480      	push	{r7}
 800050a:	b083      	sub	sp, #12
 800050c:	af00      	add	r7, sp, #0
 800050e:	6078      	str	r0, [r7, #4]
 8000510:	460b      	mov	r3, r1
 8000512:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1<< pinNumber_u8);
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	695b      	ldr	r3, [r3, #20]
 8000518:	78fa      	ldrb	r2, [r7, #3]
 800051a:	2101      	movs	r1, #1
 800051c:	fa01 f202 	lsl.w	r2, r1, r2
 8000520:	405a      	eors	r2, r3
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	615a      	str	r2, [r3, #20]
}
 8000526:	bf00      	nop
 8000528:	370c      	adds	r7, #12
 800052a:	46bd      	mov	sp, r7
 800052c:	bc80      	pop	{r7}
 800052e:	4770      	bx	lr

08000530 <delay_us>:
* Function name      : void delay_us(uint32_t usec)
* Description        : This Function generates delay in micro seconds
*
*********************************************************************************************************************/
void delay_us(uint32_t usec)
{
 8000530:	b480      	push	{r7}
 8000532:	b085      	sub	sp, #20
 8000534:	af00      	add	r7, sp, #0
 8000536:	6078      	str	r0, [r7, #4]
    for(uint32_t i = 0; i < usec * 8; i++) {
 8000538:	2300      	movs	r3, #0
 800053a:	60fb      	str	r3, [r7, #12]
 800053c:	e003      	b.n	8000546 <delay_us+0x16>
        __asm__("nop");
 800053e:	bf00      	nop
    for(uint32_t i = 0; i < usec * 8; i++) {
 8000540:	68fb      	ldr	r3, [r7, #12]
 8000542:	3301      	adds	r3, #1
 8000544:	60fb      	str	r3, [r7, #12]
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	00db      	lsls	r3, r3, #3
 800054a:	68fa      	ldr	r2, [r7, #12]
 800054c:	429a      	cmp	r2, r3
 800054e:	d3f6      	bcc.n	800053e <delay_us+0xe>
    }
}
 8000550:	bf00      	nop
 8000552:	bf00      	nop
 8000554:	3714      	adds	r7, #20
 8000556:	46bd      	mov	sp, r7
 8000558:	bc80      	pop	{r7}
 800055a:	4770      	bx	lr

0800055c <delay_ms>:
* Function name      : void delay_ms(uint32_t msec)
* Description        : This Function generates delay in mili seconds
*
*********************************************************************************************************************/
void delay_ms(uint32_t msec)
{
 800055c:	b580      	push	{r7, lr}
 800055e:	b084      	sub	sp, #16
 8000560:	af00      	add	r7, sp, #0
 8000562:	6078      	str	r0, [r7, #4]
    for(uint32_t i = 0; i < msec; i++) {
 8000564:	2300      	movs	r3, #0
 8000566:	60fb      	str	r3, [r7, #12]
 8000568:	e006      	b.n	8000578 <delay_ms+0x1c>
        delay_us(1000);
 800056a:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 800056e:	f7ff ffdf 	bl	8000530 <delay_us>
    for(uint32_t i = 0; i < msec; i++) {
 8000572:	68fb      	ldr	r3, [r7, #12]
 8000574:	3301      	adds	r3, #1
 8000576:	60fb      	str	r3, [r7, #12]
 8000578:	68fa      	ldr	r2, [r7, #12]
 800057a:	687b      	ldr	r3, [r7, #4]
 800057c:	429a      	cmp	r2, r3
 800057e:	d3f4      	bcc.n	800056a <delay_ms+0xe>
    }
}
 8000580:	bf00      	nop
 8000582:	bf00      	nop
 8000584:	3710      	adds	r7, #16
 8000586:	46bd      	mov	sp, r7
 8000588:	bd80      	pop	{r7, pc}

0800058a <main>:
* Function name      : int main(void)
* Description        : This Function is initialize the gpio pin and toggle the LED
*
*********************************************************************************************************************/
int main(void)
{
 800058a:	b580      	push	{r7, lr}
 800058c:	b084      	sub	sp, #16
 800058e:	af00      	add	r7, sp, #0
	GPIO_Handle_t gpioLed ;

	gpioLed.pGPIOx = GPIOA;
 8000590:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8000594:	607b      	str	r3, [r7, #4]
	gpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 8000596:	2305      	movs	r3, #5
 8000598:	723b      	strb	r3, [r7, #8]
	gpioLed.GPIO_PinConfig.GPIO_PinMode   = GPIO_MODE_OUT;
 800059a:	2301      	movs	r3, #1
 800059c:	727b      	strb	r3, [r7, #9]
	gpioLed.GPIO_PinConfig.GPIO_PinSpeed  = GPIO_SPEED_FAST;
 800059e:	2302      	movs	r3, #2
 80005a0:	72bb      	strb	r3, [r7, #10]
	gpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80005a2:	2300      	movs	r3, #0
 80005a4:	733b      	strb	r3, [r7, #12]
	gpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80005a6:	2300      	movs	r3, #0
 80005a8:	72fb      	strb	r3, [r7, #11]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 80005aa:	2101      	movs	r1, #1
 80005ac:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 80005b0:	f7ff fe0c 	bl	80001cc <GPIO_PeriClockControl>
	GPIO_Init(&gpioLed);
 80005b4:	1d3b      	adds	r3, r7, #4
 80005b6:	4618      	mov	r0, r3
 80005b8:	f7ff fed8 	bl	800036c <GPIO_Init>
	while(1U)
	{
		GPIO_TogglePin(GPIOA, GPIO_PIN_NO_5);
 80005bc:	2105      	movs	r1, #5
 80005be:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 80005c2:	f7ff ffa1 	bl	8000508 <GPIO_TogglePin>
		delay_ms(100);
 80005c6:	2064      	movs	r0, #100	@ 0x64
 80005c8:	f7ff ffc8 	bl	800055c <delay_ms>
		GPIO_TogglePin(GPIOA, GPIO_PIN_NO_5);
 80005cc:	bf00      	nop
 80005ce:	e7f5      	b.n	80005bc <main+0x32>

080005d0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005d0:	480d      	ldr	r0, [pc, #52]	@ (8000608 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005d2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80005d4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005d8:	480c      	ldr	r0, [pc, #48]	@ (800060c <LoopForever+0x6>)
  ldr r1, =_edata
 80005da:	490d      	ldr	r1, [pc, #52]	@ (8000610 <LoopForever+0xa>)
  ldr r2, =_sidata
 80005dc:	4a0d      	ldr	r2, [pc, #52]	@ (8000614 <LoopForever+0xe>)
  movs r3, #0
 80005de:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005e0:	e002      	b.n	80005e8 <LoopCopyDataInit>

080005e2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005e2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005e4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005e6:	3304      	adds	r3, #4

080005e8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005e8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005ea:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005ec:	d3f9      	bcc.n	80005e2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005ee:	4a0a      	ldr	r2, [pc, #40]	@ (8000618 <LoopForever+0x12>)
  ldr r4, =_ebss
 80005f0:	4c0a      	ldr	r4, [pc, #40]	@ (800061c <LoopForever+0x16>)
  movs r3, #0
 80005f2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005f4:	e001      	b.n	80005fa <LoopFillZerobss>

080005f6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005f6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005f8:	3204      	adds	r2, #4

080005fa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005fa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005fc:	d3fb      	bcc.n	80005f6 <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 80005fe:	f000 f811 	bl	8000624 <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 8000602:	f7ff ffc2 	bl	800058a <main>

08000606 <LoopForever>:

LoopForever:
  b LoopForever
 8000606:	e7fe      	b.n	8000606 <LoopForever>
  ldr   r0, =_estack
 8000608:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 800060c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000610:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000614:	0800068c 	.word	0x0800068c
  ldr r2, =_sbss
 8000618:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800061c:	2000001c 	.word	0x2000001c

08000620 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000620:	e7fe      	b.n	8000620 <ADC1_2_IRQHandler>
	...

08000624 <__libc_init_array>:
 8000624:	b570      	push	{r4, r5, r6, lr}
 8000626:	4d0d      	ldr	r5, [pc, #52]	@ (800065c <__libc_init_array+0x38>)
 8000628:	4c0d      	ldr	r4, [pc, #52]	@ (8000660 <__libc_init_array+0x3c>)
 800062a:	1b64      	subs	r4, r4, r5
 800062c:	10a4      	asrs	r4, r4, #2
 800062e:	2600      	movs	r6, #0
 8000630:	42a6      	cmp	r6, r4
 8000632:	d109      	bne.n	8000648 <__libc_init_array+0x24>
 8000634:	4d0b      	ldr	r5, [pc, #44]	@ (8000664 <__libc_init_array+0x40>)
 8000636:	4c0c      	ldr	r4, [pc, #48]	@ (8000668 <__libc_init_array+0x44>)
 8000638:	f000 f818 	bl	800066c <_init>
 800063c:	1b64      	subs	r4, r4, r5
 800063e:	10a4      	asrs	r4, r4, #2
 8000640:	2600      	movs	r6, #0
 8000642:	42a6      	cmp	r6, r4
 8000644:	d105      	bne.n	8000652 <__libc_init_array+0x2e>
 8000646:	bd70      	pop	{r4, r5, r6, pc}
 8000648:	f855 3b04 	ldr.w	r3, [r5], #4
 800064c:	4798      	blx	r3
 800064e:	3601      	adds	r6, #1
 8000650:	e7ee      	b.n	8000630 <__libc_init_array+0xc>
 8000652:	f855 3b04 	ldr.w	r3, [r5], #4
 8000656:	4798      	blx	r3
 8000658:	3601      	adds	r6, #1
 800065a:	e7f2      	b.n	8000642 <__libc_init_array+0x1e>
 800065c:	08000684 	.word	0x08000684
 8000660:	08000684 	.word	0x08000684
 8000664:	08000684 	.word	0x08000684
 8000668:	08000688 	.word	0x08000688

0800066c <_init>:
 800066c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800066e:	bf00      	nop
 8000670:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000672:	bc08      	pop	{r3}
 8000674:	469e      	mov	lr, r3
 8000676:	4770      	bx	lr

08000678 <_fini>:
 8000678:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800067a:	bf00      	nop
 800067c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800067e:	bc08      	pop	{r3}
 8000680:	469e      	mov	lr, r3
 8000682:	4770      	bx	lr
